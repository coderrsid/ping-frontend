{"ast":null,"code":"var _jsxFileName = \"/Users/siddhantsehgal/Desktop/userlogin/client/src/components/Todo.js\";\nimport React, { Component } from 'react';\nimport { getList, addToList, deleteItem, updateItem } from './UserFunctions';\nimport jwt_decode from 'jwt-decode';\nimport moment from 'moment';\nimport SignaturePad from 'react-signature-canvas';\nimport Grow from '@material-ui/core/Fade';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nconst styles = theme => ({\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  appBar: {\n    position: 'relative'\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  },\n  submitButton: {\n    display: 'block',\n    color: 'white',\n    textAlign: 'center',\n    position: 'absolute',\n    top: 14,\n    right: 10\n  },\n  floatingButton: {\n    position: 'fixed',\n    bottom: 0,\n    right: 0\n  },\n  form: {\n    width: '98%',\n    marginLeft: 13,\n    marginTop: theme.spacing(3)\n  },\n  toolbar: theme.mixins.toolbar,\n  root: {\n    minWidth: 470\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  pos: {\n    marginBottom: 12\n  },\n  uiProgess: {\n    position: 'fixed',\n    zIndex: '1000',\n    height: '31px',\n    width: '31px',\n    left: '50%',\n    top: '35%'\n  },\n  dialogeStyle: {\n    maxWidth: '50%'\n  },\n  viewRoot: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  },\n  sigContainer: {\n    width: '100%',\n    height: '40vh',\n    margin: '0 auto',\n    backgroundColor: '#fff',\n    border: '1px solid black'\n  },\n  sigImage: {\n    backgroundSize: \"200px 50px\",\n    width: \"200px\",\n    height: \"50px\",\n    backgroundColor: \"white\"\n  }\n});\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }));\n});\n\nclass Todo extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.getAll = () => {\n      this.setState({\n        uiLoading: true\n      });\n      getList(this.state.userid).then(data => {\n        console.log(data);\n        this.setState({\n          id: '',\n          title: '',\n          reminder: '',\n          open: '',\n          buttonType: '',\n          items: [...data],\n          uiLoading: false,\n          canvasDataURL: null,\n          showSigPad: false\n        });\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        editDisabled: ''\n      });\n      addToList(this.state.userid, this.state.title, this.state.reminder, this.state.canvasDataURL).then(() => {\n        this.getAll();\n      });\n      this.handleClose();\n    };\n\n    this.onUpdate = e => {\n      console.log('update called');\n      e.preventDefault();\n      updateItem(this.state.title, this.state.reminder, this.state.userid, this.state.id).then(() => {\n        this.getAll();\n      });\n      this.handleClose();\n    };\n\n    this.onDelete = val => {\n      console.log('delete called');\n      deleteItem(val, this.state.userid);\n      var data = [...this.state.items];\n      data.filter((item, index) => {\n        if (item[1] === val && item) {\n          data.splice(index, 1);\n        }\n\n        return true;\n      });\n      this.setState({\n        items: [...data]\n      });\n    };\n\n    this.handleClose = event => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleEditClickOpen = data => {\n      this.setState({\n        id: data[0],\n        title: data[1],\n        canvasDataURL: data[3],\n        buttonType: 'Edit',\n        open: true\n      });\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        id: '',\n        title: '',\n        canvasDataURL: '',\n        buttonType: '',\n        open: true\n      });\n    };\n\n    this.clear = () => {\n      this.sigPad.clear();\n    };\n\n    this.trim = () => {\n      this.setState({\n        canvasDataURL: this.sigPad.getTrimmedCanvas().toDataURL('image/png')\n      });\n    };\n\n    this.state = {\n      id: '',\n      title: '',\n      reminder: '',\n      userid: null,\n      open: '',\n      buttonType: '',\n      items: [],\n      errors: [],\n      uiLoading: true,\n      canvasDataURL: null,\n      showSigPad: false\n    };\n    this.sigPad = React.createRef();\n  }\n\n  componentDidMount() {\n    const token = localStorage.usertoken;\n    const decoded = jwt_decode(token);\n    getList(decoded.identity.id).then(data => {\n      this.setState({\n        title: '',\n        reminder: '',\n        items: [...data]\n      });\n    });\n    this.setState({\n      userid: decoded.identity.id,\n      uiLoading: false\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      open,\n      errors\n    } = this.state; // return (\n    //     <div className=\"col-md-18\">\n    //         <form onSubmit={this.onSubmit}>\n    //             <div className=\"form-group\">\n    //                 <label className=\"col-md-4\" htmlFor=\"input1\">Task Name</label>\n    //                 <label className=\"col-md-5\" htmlFor=\"input2\">Reminder</label>\n    //                 <div className=\"row\">\n    //                     <div className=\"col-md-4\">\n    //                         <input\n    //                             type=\"text\"\n    //                             className=\"form-control\"\n    //                             id=\"input1\"\n    //                             name=\"term\"\n    //                             value={this.state.term || ''}\n    //                             onChange={this.onChange.bind(this)}\n    //                         />\n    //                     </div>\n    //                     <div className=\"col-md-5\" >\n    //                        <input \n    //                             type=\"datetime-local\" \n    //                             id=\"input2\" \n    //                             className=\"form-control\" \n    //                             name=\"reminder\"\n    //                             value={this.state.reminder || ''}\n    //                             onChange={this.onChange.bind(this)}\n    //                         />\n    //                     </div>\n    //                     <div className=\"col-md-2\">\n    //                         <button className=\"btn btn-primary\"\n    //                             onClick={this.onUpdate.bind(this)}>\n    //                             Update\n    //                         </button>\n    //                     </div>\n    //                 </div>\n    //             </div>\n    //             <button className=\"btn btn-success btn-block\"\n    //                 type=\"submit\"\n    //                 onClick={this.onSubmit.bind(this)}>\n    //                 Submit\n    //             </button>\n    //         </form>\n    //         <table className=\"table\">\n    //             <tbody>\n    //                 {this.state.items.map((item, index) => {\n    //                     console.log(item)\n    //                     return <tr key={index}>\n    //                         <td className=\"text-left\">{item[0]}</td>\n    //                         <td className=\"text-center\">{item[2] ? moment (new Date(item[2])).fromNow() : \"No reminder\"}</td>\n    //                         <td className=\"text-right\">\n    //                             <button className=\"btn btn-info mr-1\"\n    //                                 disabled={this.state.editDisabled}\n    //                                 onClick={this.onEdit.bind(this, item[0], item[2], item[1])}>\n    //                                 Edit\n    //                             </button>\n    //                             <button className=\"btn btn-danger\"\n    //                                 disabled={this.state.editDisabled}\n    //                                 onClick={this.onDelete.bind(this, item[1])}>\n    //                                 Delete\n    //                             </button>\n    //                         </td>\n    //                     </tr>\n    //                 })}\n    //             </tbody>\n    //         </table>\n    //     </div>\n    // )\n\n    if (this.state.uiLoading === true) {\n      return /*#__PURE__*/React.createElement(\"main\", {\n        className: classes.content,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.toolbar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 6\n        }\n      }), this.state.uiLoading && /*#__PURE__*/React.createElement(CircularProgress, {\n        size: 150,\n        className: classes.uiProgess,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 31\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"main\", {\n        className: classes.content,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.toolbar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(IconButton, {\n        className: classes.floatingButton,\n        color: \"primary\",\n        \"aria-label\": \"Add Reminder\",\n        onClick: this.handleClickOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(AddCircleIcon, {\n        style: {\n          fontSize: 60\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 7\n        }\n      })), /*#__PURE__*/React.createElement(Dialog, {\n        fullScreen: true,\n        open: open,\n        onClose: this.handleClose,\n        TransitionComponent: Transition,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(AppBar, {\n        className: classes.appBar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Toolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        edge: \"start\",\n        color: \"inherit\",\n        onClick: this.handleClose,\n        \"aria-label\": \"close\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 10\n        }\n      })), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h6\",\n        className: classes.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 9\n        }\n      }, this.state.buttonType === 'Edit' ? 'Edit Reminder' : 'Create a new Reminder'), /*#__PURE__*/React.createElement(Button, {\n        autoFocus: true,\n        color: \"inherit\",\n        onClick: e => this.state.buttonType === 'Edit' ? this.onUpdate(e) : this.onSubmit(e),\n        className: classes.submitButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 9\n        }\n      }, this.state.buttonType === 'Edit' ? 'Save' : 'Submit'))), /*#__PURE__*/React.createElement(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        variant: \"outlined\",\n        required: true,\n        fullWidth: true,\n        id: \"reminderTitle\",\n        label: \"Reminder Title\",\n        name: \"title\",\n        autoComplete: \"reminderTitle\",\n        helperText: errors.title,\n        value: this.state.title,\n        error: errors.title ? true : false,\n        onChange: this.onChange.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 10\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        id: \"reminderDetails\",\n        label: \"Reminder\",\n        type: \"datetime-local\",\n        autoComplete: \"reminderDetails\",\n        className: classes.textField,\n        value: this.state.reminder,\n        helperText: errors.reminder,\n        error: errors.reminder ? true : false,\n        onChange: this.onChange.bind(this),\n        InputLabelProps: {\n          shrink: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 33\n        }\n      }, this.state.showSigPad ? /*#__PURE__*/React.createElement(Grow, {\n        in: this.state.showSigPad,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'inline-block',\n          border: '0.8px solid black',\n          padding: '10px 10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(SignaturePad, {\n        canvasProps: {\n          height: '300',\n          width: '600'\n        },\n        ref: ref => {\n          this.sigPad = ref;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        onClick: this.clear,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 49\n        }\n      }, \"Clear\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        onClick: this.trim,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 49\n        }\n      }, \"Save\")), /*#__PURE__*/React.createElement(\"img\", {\n        className: classes.sigImage,\n        src: this.state.canvasDataURL,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 45\n        }\n      }))) : /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submit,\n        disabled: this.state.canvasDataURL,\n        onClick: () => this.setState({\n          showSigPad: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 41\n        }\n      }, \"Add Canvas\"))))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 6\n        }\n      }, this.state.items ? this.state.items.map(item => {\n        console.log(item);\n        return /*#__PURE__*/React.createElement(Grid, {\n          key: item[0],\n          item: true,\n          xs: 12,\n          sm: 6,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 16\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          className: classes.root,\n          variant: \"outlined\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(CardContent, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 10\n          }\n        }, item[3] ? /*#__PURE__*/React.createElement(\"img\", {\n          className: classes.sigImage,\n          src: item[3],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 52\n          }\n        }) : null, /*#__PURE__*/React.createElement(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 11\n          }\n        }, item[1]), /*#__PURE__*/React.createElement(Typography, {\n          className: classes.pos,\n          color: \"textSecondary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 11\n          }\n        }, item[2] ? moment(new Date(item[2])).fromNow() : \"No reminder\")), /*#__PURE__*/React.createElement(CardActions, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 10\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          size: \"small\",\n          color: \"primary\",\n          onClick: e => this.handleEditClickOpen(item),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 11\n          }\n        }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n          size: \"small\",\n          color: \"primary\",\n          onClick: e => this.onDelete(item[1]),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 11\n          }\n        }, \"Delete\"))));\n      }) : /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }\n      }, \"No reminders!\")));\n    }\n  }\n\n}\n\nexport default withStyles(styles)(Todo);","map":{"version":3,"sources":["/Users/siddhantsehgal/Desktop/userlogin/client/src/components/Todo.js"],"names":["React","Component","getList","addToList","deleteItem","updateItem","jwt_decode","moment","SignaturePad","Grow","withStyles","Typography","Button","Dialog","AddCircleIcon","AppBar","Toolbar","IconButton","CloseIcon","Slide","TextField","Grid","Card","CardActions","CircularProgress","CardContent","CardMedia","styles","theme","content","flexGrow","padding","spacing","appBar","position","title","marginLeft","flex","submitButton","display","color","textAlign","top","right","floatingButton","bottom","form","width","marginTop","toolbar","mixins","root","minWidth","bullet","margin","transform","pos","marginBottom","uiProgess","zIndex","height","left","dialogeStyle","maxWidth","viewRoot","closeButton","palette","grey","sigContainer","backgroundColor","border","sigImage","backgroundSize","Transition","forwardRef","props","ref","Todo","constructor","onChange","e","setState","target","name","value","getAll","uiLoading","state","userid","then","data","console","log","id","reminder","open","buttonType","items","canvasDataURL","showSigPad","onSubmit","preventDefault","editDisabled","handleClose","onUpdate","onDelete","val","filter","item","index","splice","event","handleEditClickOpen","handleClickOpen","clear","sigPad","trim","getTrimmedCanvas","toDataURL","errors","createRef","componentDidMount","token","localStorage","usertoken","decoded","identity","render","classes","fontSize","bind","textField","shrink","submit","map","Date","fromNow"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { getList, addToList, deleteItem, updateItem } from './UserFunctions';\nimport jwt_decode from 'jwt-decode'\nimport moment from 'moment';\nimport SignaturePad from 'react-signature-canvas';\n\nimport Grow from '@material-ui/core/Fade';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nconst styles = (theme) => ({\n\tcontent: {\n\t\tflexGrow: 1,\n\t\tpadding: theme.spacing(3)\n\t},\n\tappBar: {\n\t\tposition: 'relative'\n\t},\n\ttitle: {\n\t\tmarginLeft: theme.spacing(2),\n\t\tflex: 1\n\t},\n\tsubmitButton: {\n\t\tdisplay: 'block',\n\t\tcolor: 'white',\n\t\ttextAlign: 'center',\n\t\tposition: 'absolute',\n\t\ttop: 14,\n\t\tright: 10\n\t},\n\tfloatingButton: {\n\t\tposition: 'fixed',\n\t\tbottom: 0,\n\t\tright: 0\n\t},\n\tform: {\n\t\twidth: '98%',\n\t\tmarginLeft: 13,\n\t\tmarginTop: theme.spacing(3)\n\t},\n\ttoolbar: theme.mixins.toolbar,\n\troot: {\n\t\tminWidth: 470\n\t},\n\tbullet: {\n\t\tdisplay: 'inline-block',\n\t\tmargin: '0 2px',\n\t\ttransform: 'scale(0.8)'\n\t},\n\tpos: {\n\t\tmarginBottom: 12\n\t},\n\tuiProgess: {\n\t\tposition: 'fixed',\n\t\tzIndex: '1000',\n\t\theight: '31px',\n\t\twidth: '31px',\n\t\tleft: '50%',\n\t\ttop: '35%'\n\t},\n\tdialogeStyle: {\n\t\tmaxWidth: '50%'\n\t},\n\tviewRoot: {\n\t\tmargin: 0,\n\t\tpadding: theme.spacing(2)\n\t},\n\tcloseButton: {\n\t\tposition: 'absolute',\n\t\tright: theme.spacing(1),\n\t\ttop: theme.spacing(1),\n\t\tcolor: theme.palette.grey[500]\n    },\n    sigContainer: {\n        width: '100%',\n        height: '40vh',\n        margin: '0 auto',\n        backgroundColor: '#fff',\n        border: '1px solid black'\n    },\n    sigImage: {\n        backgroundSize: \"200px 50px\",\n        width: \"200px\",\n        height: \"50px\",\n        backgroundColor: \"white\"\n      }\n      \n});\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n\treturn <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nclass Todo extends Component {\n    constructor() {\n        super()\n        this.state = {\n            id: '',\n            title: '',\n            reminder: '',\n            userid: null,\n            open: '',\n            buttonType: '',\n            items: [],\n            errors: [],\n            uiLoading: true,\n            canvasDataURL: null,\n            showSigPad: false\n        }\n\n        this.sigPad = React.createRef();\n    }\n\n    componentDidMount () {\n        const token = localStorage.usertoken;\n        const decoded = jwt_decode(token);\n        getList(decoded.identity.id).then(data => {\n            this.setState({\n                title: '',\n                reminder: '',\n                items: [...data]\n            });\n        })\n        this.setState({userid: decoded.identity.id, uiLoading: false});\n    }\n\n    onChange = e => {\n        this.setState({\n            [e.target.name] : e.target.value,\n        })\n    }\n\n    getAll = () => {\n        this.setState({uiLoading: true});\n        getList(this.state.userid).then(data => {\n            console.log(data);\n            this.setState({\n                id: '',\n                title: '',\n                reminder: '',\n                open: '',\n                buttonType: '',\n                items: [...data],\n                uiLoading: false,\n                canvasDataURL: null,\n                showSigPad: false\n            });\n        })\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n        this.setState({ editDisabled: '' })\n        addToList(this.state.userid ,this.state.title, this.state.reminder, this.state.canvasDataURL).then(() => {\n            this.getAll()\n        })\n        this.handleClose();\n    }\n\n    onUpdate = e => {\n        console.log('update called');\n        e.preventDefault();\n        updateItem(this.state.title, this.state.reminder, this.state.userid, this.state.id).then(() => {\n            this.getAll()\n        })\n        this.handleClose();\n    }\n\n    onDelete = (val) => {\n        console.log('delete called');\n        deleteItem(val, this.state.userid)\n\n        var data = [...this.state.items]\n        data.filter((item, index) => {\n            if (item[1] === val && item) {\n                data.splice(index, 1)\n            }\n            return true\n        })\n        this.setState({ items: [...data] })\n    }\n\n    handleClose = (event) => {\n        this.setState({ open: false });\n    };\n\n    handleEditClickOpen = (data) => {\n\t\tthis.setState({\n            id: data[0],\n\t\t\ttitle: data[1],\n            canvasDataURL: data[3],\n\t\t\tbuttonType: 'Edit',\n\t\t\topen: true\n        });\n\t}\n\n    handleClickOpen = () => {\n        this.setState({\n            id: '',\n            title: '',\n            canvasDataURL: '',\n            buttonType: '',\n            open: true\n        });\n    };\n\n    clear = () => {\n        this.sigPad.clear()\n    }\n\n    trim = () => {\n        this.setState({canvasDataURL: this.sigPad.getTrimmedCanvas()\n            .toDataURL('image/png')})\n    }\n\n    render () {\n\n    \tconst { classes } = this.props;\n        const { open, errors } = this.state;\n        \n        // return (\n        //     <div className=\"col-md-18\">\n        //         <form onSubmit={this.onSubmit}>\n        //             <div className=\"form-group\">\n        //                 <label className=\"col-md-4\" htmlFor=\"input1\">Task Name</label>\n        //                 <label className=\"col-md-5\" htmlFor=\"input2\">Reminder</label>\n        //                 <div className=\"row\">\n        //                     <div className=\"col-md-4\">\n        //                         <input\n        //                             type=\"text\"\n        //                             className=\"form-control\"\n        //                             id=\"input1\"\n        //                             name=\"term\"\n        //                             value={this.state.term || ''}\n        //                             onChange={this.onChange.bind(this)}\n        //                         />\n        //                     </div>\n        //                     <div className=\"col-md-5\" >\n        //                        <input \n        //                             type=\"datetime-local\" \n        //                             id=\"input2\" \n        //                             className=\"form-control\" \n        //                             name=\"reminder\"\n        //                             value={this.state.reminder || ''}\n        //                             onChange={this.onChange.bind(this)}\n        //                         />\n        //                     </div>\n        //                     <div className=\"col-md-2\">\n        //                         <button className=\"btn btn-primary\"\n        //                             onClick={this.onUpdate.bind(this)}>\n        //                             Update\n        //                         </button>\n        //                     </div>\n        //                 </div>\n        //             </div>\n        //             <button className=\"btn btn-success btn-block\"\n        //                 type=\"submit\"\n        //                 onClick={this.onSubmit.bind(this)}>\n        //                 Submit\n        //             </button>\n        //         </form>\n        //         <table className=\"table\">\n        //             <tbody>\n        //                 {this.state.items.map((item, index) => {\n        //                     console.log(item)\n        //                     return <tr key={index}>\n        //                         <td className=\"text-left\">{item[0]}</td>\n        //                         <td className=\"text-center\">{item[2] ? moment (new Date(item[2])).fromNow() : \"No reminder\"}</td>\n        //                         <td className=\"text-right\">\n        //                             <button className=\"btn btn-info mr-1\"\n        //                                 disabled={this.state.editDisabled}\n        //                                 onClick={this.onEdit.bind(this, item[0], item[2], item[1])}>\n        //                                 Edit\n        //                             </button>\n\n        //                             <button className=\"btn btn-danger\"\n        //                                 disabled={this.state.editDisabled}\n        //                                 onClick={this.onDelete.bind(this, item[1])}>\n        //                                 Delete\n        //                             </button>\n        //                         </td>\n        //                     </tr>\n        //                 })}\n        //             </tbody>\n        //         </table>\n        //     </div>\n        // )\n\n\n        if (this.state.uiLoading === true) {\n\t\t\treturn (\n\t\t\t\t<main className={classes.content}>\n\t\t\t\t\t<div className={classes.toolbar} />\n\t\t\t\t\t{this.state.uiLoading && <CircularProgress size={150} className={classes.uiProgess} />}\n\t\t\t\t</main>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<main className={classes.content}>\n\t\t\t\t\t<div className={classes.toolbar} />\n\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tclassName={classes.floatingButton}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\taria-label=\"Add Reminder\"\n\t\t\t\t\t\tonClick={this.handleClickOpen}\n\t\t\t\t\t>\n\t\t\t\t\t\t<AddCircleIcon style={{ fontSize: 60 }} />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Dialog fullScreen open={open} onClose={this.handleClose} TransitionComponent={Transition}>\n\t\t\t\t\t\t<AppBar className={classes.appBar}>\n\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t<IconButton edge=\"start\" color=\"inherit\" onClick={this.handleClose} aria-label=\"close\">\n\t\t\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\n\t\t\t\t\t\t\t\t\t{this.state.buttonType === 'Edit' ? 'Edit Reminder' : 'Create a new Reminder'}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\t\tonClick={(e) => this.state.buttonType === 'Edit' ? this.onUpdate(e) : this.onSubmit(e)}\n\t\t\t\t\t\t\t\t\tclassName={classes.submitButton}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.buttonType === 'Edit' ? 'Save' : 'Submit'}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t</AppBar>\n\n\t\t\t\t\t\t<form className={classes.form} noValidate>\n\t\t\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tid=\"reminderTitle\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Reminder Title\"\n\t\t\t\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"reminderTitle\"\n\t\t\t\t\t\t\t\t\t\thelperText={errors.title}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.title}\n\t\t\t\t\t\t\t\t\t\terror={errors.title ? true : false}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange.bind(this)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={20}>\n                                    <TextField\n                                        id=\"reminderDetails\"\n                                        label=\"Reminder\"\n                                        type=\"datetime-local\"\n                                        autoComplete=\"reminderDetails\"\n                                        className={classes.textField}\n                                        value={this.state.reminder}\n                                        helperText={errors.reminder}\n                                        error={errors.reminder ? true : false}\n                                        onChange={this.onChange.bind(this)}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n\t\t\t\t\t\t\t\t</Grid>\n                                <br></br>\n                                <Grid item xs={12} >\n                                    {this.state.showSigPad ? \n                                    <Grow in={this.state.showSigPad}>\n                                        <div style={{display: 'inline-block', border: '0.8px solid black', padding:'10px 10px'}}>\n                                            <SignaturePad\n                                            canvasProps={{height:'300', width: '600', }}\n                                                ref={(ref) => { this.sigPad = ref }} />\n                                            <div>\n                                                <Button variant=\"outlined\" onClick={this.clear}>\n                                                Clear\n                                                </Button>\n                                                <Button variant=\"outlined\" onClick={this.trim}>\n                                                Save\n                                                </Button>\n                                            </div>\n                                            <img className={classes.sigImage} src={this.state.canvasDataURL} />\n                                        </div>\n                                    </Grow>    \n                                        :\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.submit}\n                                            disabled={this.state.canvasDataURL}\n                                            onClick={() => this.setState({showSigPad: true})}\n                                        >\n                                            Add Canvas\n                                        </Button>\n                                    }\n                                </Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Dialog>\n\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t{this.state.items ? this.state.items.map((item) => {\n                            console.log(item);\n\t\t\t\t\t\t\treturn (<Grid key={item[0]} item xs={12} sm={6}>\n\t\t\t\t\t\t\t\t<Card className={classes.root} variant=\"outlined\">\n\t\t\t\t\t\t\t\t\t<CardContent>\n                                        {item[3] ? <img className={classes.sigImage} src={item[3]} /> : null}\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"h5\" component=\"h2\">\n\t\t\t\t\t\t\t\t\t\t\t{item[1]}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t<Typography className={classes.pos} color=\"textSecondary\">\n                                            {item[2] ? moment (new Date(item[2])).fromNow() : \"No reminder\"}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n                                        \n\t\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t\t\t<Button size=\"small\" color=\"primary\" onClick={(e) => this.handleEditClickOpen(item)}>\n\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button size=\"small\" color=\"primary\" onClick={(e) => this.onDelete(item[1])}>\n\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t)}) : <h1>No reminders!</h1>}\n                        \n\t\t\t\t\t</Grid>\n\t\t\t\t</main>\n\t\t\t);\n\t\t}\n    }\n}\n\nexport default withStyles(styles)(Todo)"]},"metadata":{},"sourceType":"module"}